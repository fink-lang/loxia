babel_types = import '@babel/types'
{arrowFunctionExpression} = babel_types

{transform_left} = import '../../js/left.fnk'
{add, any} = import '../context.fnk'
{transform_block} = import '../block/init.fnk'



transform_func = fn node, ctx:
  {unique_ident} = ctx

  [...params] = pipe node.args:
    map arg:
      match arg:
        {type: 'empty'}:
          unique_ident ''
        else:
          transform_left ctx.transform arg

  body = transform_block node, ctx
  arrowFunctionExpression params, body



add_func = fn ctx:
  pipe ctx:
    add any, 'fn', transform_func

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`func compiles defaults 1`] = `
"export const fun = (a, b = 12, c) => {
  shrub(...a);
  foo();
  return bar();
};"
`;

exports[`func compiles empty arg 1`] = `"export const fun = (a, ˆ_1, ˆ_2, b) => b;"`;

exports[`func compiles func of func 1`] = `
"export const fun5 = (c) => (d, e) => {
  const ˆvalue_1 = [d, e];

  if (ˆvalue_1 !== undefined && ˆvalue_1 !== null && typeof ˆvalue_1[Symbol.iterator] === \\"function\\") {
    const [ˆa_3, ˆa_4] = ˆvalue_1;
    if (ˆa_3 === 1) if (ˆa_4 === 2) {
      return c;
    }
  }

  if (ˆvalue_1 !== undefined && ˆvalue_1 !== null && typeof ˆvalue_1[Symbol.iterator] === \\"function\\") {
    const [ˆa_5, ˆa_6] = ˆvalue_1;
    if (ˆa_5 === 2) if (ˆa_6 === 1) {
      return 1 / c;
    }
  }
};"
`;

exports[`func compiles other 1`] = `
"export const fun = (c, d) => {
  const x = 123;
  {
    const ˆvalue_1 = ni;

    if (ˆvalue_1 === c + x) {
      return d;
    }

    if (ˆvalue_1 === c + 1) {
      return d + 1;
    }
  }
};"
`;

exports[`func compiles single line 1`] = `"export const fun = () => \`shrub\`;"`;

exports[`func compiles spread 1`] = `"export const fun = (a, b = 12, ...d) => a + b + c;"`;

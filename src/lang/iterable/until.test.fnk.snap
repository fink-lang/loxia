// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`while async compiles 1`] = `
"(async function* filter_until(ˆitems_2) {
  for await (const ˆitem_1 of ˆitems_2) {
    yield ˆitem_1;
    const item = ˆitem_1;
    const ˆresult_3 = (await item) < 10;
    if (ˆresult_3 === true) return;
  }
});"
`;

exports[`while compiles 1`] = `
"(function* filter_until(ˆitems_2) {
  for (const ˆitem_1 of ˆitems_2) {
    yield ˆitem_1;
    const item = ˆitem_1;
    const ˆresult_3 = item < 10;
    if (ˆresult_3 === true) return;
  }
});"
`;

exports[`while compiles destructuring 1`] = `
"(function* filter_until(ˆitems_2) {
  for (const ˆitem_1 of ˆitems_2) {
    yield ˆitem_1;
    const [foo, ...bar] = ˆitem_1;
    const foo_alone = foo && 0 === length(bar);
    const ˆresult_3 = foo_alone;
    if (ˆresult_3 === true) return;
  }
});

(function* filter_until(ˆitems_6) {
  for (const ˆitem_4 of ˆitems_6) {
    yield ˆitem_4;

    let _do_result;

    {
      const [...ˆitems_5] = ˆitem_4;
      _do_result = [ˆitems_5.slice(0, -1), ˆitems_5.slice(-1)];
    }
    const [foo, [bar]] = _do_result;
    _do_result = undefined;
    const ˆresult_7 = bar && 0 === length(foo);
    if (ˆresult_7 === true) return;
  }
});"
`;

exports[`while compiles with accu 1`] = `
"(function* filter_until(ˆitems_3) {
  let ˆaccu_2 = 0;

  for (const ˆitem_1 of ˆitems_3) {
    yield ˆitem_1;
    const cntr = ˆaccu_2;
    const ˆresult_4 = cntr > 2;
    if (ˆresult_4 === true) return;
    ˆaccu_2 = cntr + 1;
  }
});

(function* filter_until(ˆitems_7) {
  let ˆaccu_6 = 0;

  for (const ˆitem_5 of ˆitems_7) {
    yield ˆitem_5;
    const cntr = ˆaccu_6;
    const ˆresult_8 = cntr > 2;
    if (ˆresult_8 === true) return;
    ˆaccu_6 = cntr + 1;
  }
});"
`;

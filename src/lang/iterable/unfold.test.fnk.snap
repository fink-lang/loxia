// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`unfold compiles with default 1`] = `
"(function unfold(ˆinitial_3) {
  return {
    *[Symbol.iterator]() {
      let ˆitem_1 = ˆinitial_3;

      while (true) {
        const prev = ˆitem_1 === undefined ? 1 : ˆitem_1;
        const ˆresult_2 = prev + 1;
        yield ˆresult_2;
        ˆitem_1 = ˆresult_2;
      }
    }

  };
});"
`;

exports[`unfold compiles with default and accu 1`] = `
"(function unfold(ˆinitial_5) {
  return {
    *[Symbol.iterator]() {
      let ˆaccu_2 = 1;
      let ˆitem_1 = ˆinitial_5;

      while (true) {
        const prev = ˆitem_1 === undefined ? 1 : ˆitem_1;
        const acc = ˆaccu_2;
        const [ˆresult_3, ˆnext_accu_4] = [prev * accu, accu + 1];
        ˆaccu_2 = ˆnext_accu_4;
        yield ˆresult_3;
        ˆitem_1 = ˆresult_3;
      }
    }

  };
});"
`;

exports[`unfold compiles with previous 1`] = `
"(function unfold(ˆinitial_3) {
  return {
    *[Symbol.iterator]() {
      let ˆitem_1 = ˆinitial_3;

      while (true) {
        const prev = ˆitem_1;
        const ˆresult_2 = prev + 1;
        yield ˆresult_2;
        ˆitem_1 = ˆresult_2;
      }
    }

  };
});"
`;

exports[`unfold compiles with spread 1`] = `
"(function unfold(ˆinitial_3) {
  return {
    *[Symbol.iterator]() {
      let ˆitem_1 = ˆinitial_3;

      while (true) {
        const ˆresult_2 = [1, 2, 3];
        yield* ˆresult_2;
        ˆitem_1 = ˆresult_2;
      }
    }

  };
});"
`;

exports[`unfold compiles without args 1`] = `
"(function unfold(ˆinitial_3) {
  return {
    *[Symbol.iterator]() {
      let ˆitem_1 = ˆinitial_3;

      while (true) {
        const ˆresult_2 = 1234;
        yield ˆresult_2;
        ˆitem_1 = ˆresult_2;
      }
    }

  };
});"
`;

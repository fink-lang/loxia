{returnStatement, ifStatement} = import'@babel/types'

{generator, for_of, yields, neq, true_} = import '../../js/types.fnk'

{get_iter_helpers} = import './common.fnk'



transform_while = fn node, ctx:
  {
    acc_init
    item, items
    item_acc_assign
    expressions
    result
    next_accu
  } = get_iter_helpers node, ctx

  generator 'filter_while', [items],
    ...acc_init

    for_of [item, items],
      ...item_acc_assign

      ...expressions

      ifStatement
        neq result, true_ _
        returnStatement _

      yields item

      ...next_accu

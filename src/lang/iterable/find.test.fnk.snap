// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`find async compiles 1`] = `
"async ˆitems_2 => {
  for await (const ˆitem_1 of ˆitems_2) {
    const item = ˆitem_1;
    const ˆresult_3 = (await item) > 3;
    if (ˆresult_3) return ˆitem_1;
  }

  return undefined;
};"
`;

exports[`find compiles complex find 1`] = `
"ˆitems_2 => {
  for (const ˆitem_1 of ˆitems_2) {
    const {
      \\"item\\": item
    } = ˆitem_1;

    let _do_result;

    ˆmatch_5: {
      const ˆvalue_4 = item;

      if (ˆvalue_4 !== undefined && ˆvalue_4 !== null) {
        const {
          \\"spam\\": ˆp_6
        } = ˆvalue_4;

        if (ˆp_6 === spam) {
          _do_result = shrub;
          break ˆmatch_5;
        }
      }

      {
        _do_result = ni;
        break ˆmatch_5;
      }
    }

    const ˆresult_3 = _do_result;
    _do_result = undefined;
    if (ˆresult_3) return ˆitem_1;
  }

  return undefined;
};

ˆitems_8 => {
  for (const ˆitem_7 of ˆitems_8) {
    const [foo, ...bar] = ˆitem_7;
    const foo_alone = foo && 0 === length(bar);
    const ˆresult_9 = foo_alone;
    if (ˆresult_9) return ˆitem_7;
  }

  return undefined;
};

ˆitems_12 => {
  for (const ˆitem_10 of ˆitems_12) {
    let _do_result2;

    {
      const [...ˆitems_11] = ˆitem_10;
      _do_result2 = [ˆitems_11.slice(0, -1), ˆitems_11.slice(-1)];
    }
    const [foo, [bar]] = _do_result2;
    _do_result2 = undefined;
    const ˆresult_13 = bar && 0 === length(foo);
    if (ˆresult_13) return ˆitem_10;
  }

  return undefined;
};"
`;

exports[`find compiles find with accu 1`] = `
"ˆitems_3 => {
  let ˆaccu_2 = false;

  for (const ˆitem_1 of ˆitems_3) {
    const item = ˆitem_1;
    const is_even_elem = ˆaccu_2;
    const ˆresult_4 = item > 123 && is_even_elem;
    if (ˆresult_4) return ˆitem_1;
    ˆaccu_2 = !is_even_elem;
  }

  return undefined;
};"
`;

exports[`find compiles simple find 1`] = `
"ˆitems_2 => {
  for (const ˆitem_1 of ˆitems_2) {
    const item = ˆitem_1;
    const ˆresult_3 = item > 3;
    if (ˆresult_3) return ˆitem_1;
  }

  return undefined;
};"
`;

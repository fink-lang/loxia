babel_types = import '@babel/types'
{whileStatement, blockStatement} = babel_types

{yields, assign, generator, true_, lets, ident} = import '../../js/types.fnk'

{get_iter_helpers} = import './common.fnk'



loop = fn ...body:
  whileStatement
    true_ _
    blockStatement body



transform_unfold = fn node, ctx:
  {
    acc_init
    item, items
    item_acc_assign
    expressions
    result, result_is_spread
    next_ctx
  } = get_iter_helpers node, ctx, 'initial'

  name = ident 'unfold', ctx

  js = generator name, [items],
    ...acc_init
    lets item, items

    loop
      ...item_acc_assign
      ...expressions
      yields result, result_is_spread
      assign item, result

  [js, next_ctx]


{add_with_builtin, any} = import '../context.fnk'

{transform_fold} = import './fold.fnk'
{transform_unfold} = import './unfold.fnk'
{transform_map} = import './map.fnk'
{transform_filter} = import './filter.fnk'
{transform_while} = import './while.fnk'
{transform_until} = import './until.fnk'
{transform_with_runtime_lib} = import './common.fnk'

{use_runtime_fn} = import '../runtime.fnk'
{runtime_impl} = import '../runtime.fnk'
{add_ignorable_import} = import '../transform.fnk'


legacy_uri = '@fink/loxia:iter:legacy'



with_legacy = fn legacy_transform: fn node, ctx:
  runtime_fn = '_${node.op}_'
  next_ctx = use_runtime_fn runtime_fn, ctx

  match next_ctx:
    legacy_uri == runtime_impl runtime_fn, ?:
      legacy_transform node, next_ctx

    else:
      transform_with_runtime_lib runtime_fn, node, next_ctx


add = fn op, legacy_transform: fn ctx:
  pipe ctx:
    add_with_builtin any, op, legacy_uri, with_legacy legacy_transform



add_iterables = fn ctx:
  pipe ctx:
    add_ignorable_import legacy_uri
    add 'fold', transform_fold
    add 'unfold', transform_unfold
    add 'map', transform_map
    add 'filter', transform_filter
    add 'while', transform_while
    add 'until', transform_until

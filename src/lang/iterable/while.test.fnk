{fink2js} = import '../../testing/generate.fnk'
{describe, it, expect, to_match_snapshot} = import '@fink/jest/test.fnk'



describe 'while', fn:
  it 'compiles with default runtime', fn:
    expect
      fink2js '
        while item:
          item < 10
      '
      to_match_snapshot

    expect
      fink2js '
        while item, cntr=0:
          [cntr > 2, cntr + 1]
      '
      to_match_snapshot

    expect
      fink2js '
        while item, cntr=0, shared_accu:
          [cntr > 2, cntr + 1, shared_accu + 1]
      '
      to_match_snapshot


  it 'compiles with custom runtime', fn:
    fink2js '
      {_while_} = import "./iter.fnk"
      while item:
          item < 10
    '
    to_match_snapshot



describe 'while legacy', fn:
  it 'compiles', fn:
    expect
      fink2js '
        {_while_} = import "@fink/loxia:iter:legacy"
        while item:
          item < 10
      '
      to_match_snapshot


  it 'compiles with accu', fn:
    expect
      fink2js '
        {_while_} = import "@fink/loxia:iter:legacy"

        while _, cntr=0:
          [cntr < 2, cntr + 1]

        while , cntr=0:
          [cntr < 2, cntr + 1]

        while item, cntr=0:
          [item and cntr < 2, cntr + 1]
      '
      to_match_snapshot


  it 'compiles destructuring', fn:
    expect
      fink2js '
        {_while_} = import "@fink/loxia:iter:legacy"
        while [foo, ...bar]:
          foo_alone = foo and is_empty bar
          foo_alone

        while [...foo, bar]:
          bar and is_empty foo
      '
      to_match_snapshot



describe 'while async', fn:
  it 'compiles', fn:
    expect
      fink2js '
        {_while_} = import "@fink/loxia:iter:legacy"
        while item:
          await item < 10
      '
      to_match_snapshot

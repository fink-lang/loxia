// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`calculated props compiles 1`] = `
"export const foo = {
  [Symbol(\`foo\`)]: 123,
  [\`spam\`]: 456,
  [\`spam-\${ham}\`]: \`ni\`
};"
`;

exports[`destructuring record compiles computed keys 1`] = `
"const {
  [\`n i\`]: ni
} = foo;"
`;

exports[`destructuring record compiles defaults 1`] = `
"const {
  x = 1,
  π = 2,
  ni: {
    y,
    z
  }
} = {
  ni: {
    y: 1,
    z: 2
  }
};"
`;

exports[`destructuring record compiles empty 1`] = `
"const {
  foo: ˆunused_1,
  bar
} = {
  foo: 12,
  bar: 34
};"
`;

exports[`destructuring record compiles non js idents 1`] = `
"const {
  foo,
  π,
  ƒ,
  \\"delete\\": ˆdelete
} = obj;"
`;

exports[`destructuring record compiles simple 1`] = `
"const {
  a,
  b,
  c
} = ni;"
`;

exports[`destructuring record compiles spread 1`] = `
"const {
  e,
  ...f
} = {
  e: 0,
  foo: 12,
  bar: 34
};"
`;

exports[`record compiles idents that are not js prop-names 1`] = `
"export const foo = {
  foo: bar,
  π: 3.12,
  ƒ: \`fink\`
};"
`;

exports[`record compiles key:val 1`] = `
"export const obj = {
  a: 1,
  b: 123,
  [\`c-d-e\`]: cde
};"
`;

exports[`record compiles key:val 2`] = `
"export const obj7 = {
  a: 123,
  b: 123 && 123 && 1345,
  c: (a, b) => 134
};"
`;

exports[`record compiles multiline 1`] = `
"export const obj = {
  a: 123,
  b: 123 && 123 && 1345,
  c: (a, b) => 134,
  d: foo(a + 3)
};"
`;

exports[`record compiles multiline 2`] = `
"export const obj = {
  a: 123,
  b: 123 && 123 && 1345,
  c: (a, b) => 134,
  d: foo(a + 3)
};"
`;

exports[`record compiles shorthand 1`] = `
"export const obj = {
  foo,
  π,
  ƒ
};"
`;

exports[`record compiles shorthand 2`] = `
"export const obj = {
  a,
  \\"delete\\": ˆdelete,
  true,
  false
};"
`;

exports[`record compiles shorthand 3`] = `
"export const obj = {
  [\`foo\`]: \`foo\`
};"
`;

exports[`record compiles simple 1`] = `"export const obj = {};"`;

exports[`record compiles spread 1`] = `
"export const obj = {
  a,
  b,
  ...c
};"
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`calculated props compiles 1`] = `
"const foo = {
  \\"foo\\": foo,
  [Symbol(\`foo\`)]: 123,
  [\`spam\`]: 456,
  \\"ni\\": ni
};
Object.assign(module.exports, {
  foo
});"
`;

exports[`destructuring object compiles computed keys 1`] = `
"const {
  [\`n i\`]: ni
} = foo;
Object.assign(module.exports, {});"
`;

exports[`destructuring object compiles defaults 1`] = `
"const {
  \\"x\\": x = 1,
  \\"ni\\": {
    \\"y\\": y,
    \\"z\\": z
  }
} = {
  \\"ni\\": {
    \\"y\\": 1,
    \\"z\\": 2
  }
};
Object.assign(module.exports, {});"
`;

exports[`destructuring object compiles simple 1`] = `
"const {
  \\"a\\": a,
  \\"b\\": b,
  \\"c\\": c
} = ni;
Object.assign(module.exports, {});"
`;

exports[`destructuring object compiles spread 1`] = `
"const {
  \\"e\\": e,
  ...f
} = {
  \\"e\\": 0,
  \\"foo\\": 12,
  \\"bar\\": 34
};
Object.assign(module.exports, {});"
`;

exports[`object compiles key:val 1`] = `
"const obj = {
  \\"a\\": 1,
  \\"b\\": 123,
  [\`c-d-e\`]: cde
};
Object.assign(module.exports, {
  obj
});"
`;

exports[`object compiles key:val 2`] = `
"const obj7 = {
  \\"a\\": 123,
  \\"b\\": 123 && 123 && 1345,
  \\"c\\": (a, b) => 134
};
Object.assign(module.exports, {
  obj7
});"
`;

exports[`object compiles multiline 1`] = `
"const obj = {
  \\"a\\": 123,
  \\"b\\": 123 && 123 && 1345,
  \\"c\\": (a, b) => 134,
  \\"d\\": foo(a + 3)
};
Object.assign(module.exports, {
  obj
});"
`;

exports[`object compiles shorthand 1`] = `
"const obj = {
  \\"a\\": a
};
Object.assign(module.exports, {
  obj
});"
`;

exports[`object compiles shorthand 2`] = `
"const obj = {
  \\"a\\": a,
  \\"delete\\": Ë†delete,
  \\"true\\": true,
  \\"false\\": false
};
Object.assign(module.exports, {
  obj
});"
`;

exports[`object compiles simple 1`] = `
"const obj = {};
Object.assign(module.exports, {
  obj
});"
`;

exports[`object compiles spread 1`] = `
"const obj = {
  \\"a\\": a,
  \\"b\\": b,
  ...c
};
Object.assign(module.exports, {
  obj
});"
`;

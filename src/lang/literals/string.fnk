{templateElement, templateLiteral, taggedTemplateExpression} = import '@babel/types'


transform_string = fn node, {transform}:
  {exprs: parts, tag=null} = node

  [...quasies] = pipe parts:
    filter part: part.type == 'string:text'
    map part:
      templateElement:: {raw: part.value.replace(rx/\\([\s\S])|(`)/g, '\\$1$2')}

  [...expressions] = pipe parts:
    filter part: part.type != 'string:text'
    map part: transform:: part

  templ_str = templateLiteral:: quasies, expressions

  match tag:
    null: templ_str
    else:
      taggedTemplateExpression::
        transform:: node.tag
        templ_str


{only, describe, it, expect, to_match_snapshot} = import '@fink/jest/test.fnk'
{fink2js} = import '../../testing/generate.fnk'


describe 'record', fn:
  it 'compiles simple', fn:
    expect
      fink2js 'foo = {}'
      to_match_snapshot


  it 'compiles shorthand', fn:
    expect
      fink2js 'foo = {foo, π, ƒ}'
      to_match_snapshot

    expect
      fink2js 'foo = {a, delete, true, false}'
      to_match_snapshot

    expect
      fink2js "foo = {'foo'}"
      to_match_snapshot


  it 'compiles spread', fn:
    expect
      fink2js 'foo = {a, b, ...c}'
      to_match_snapshot


  it 'compiles key:val', fn:
    expect
      fink2js "foo = {a: 1, b: 123, 'c-d-e': cde}"
      to_match_snapshot

    expect
      fink2js '
        obj7 = {a: 123, b: 123 and 123 and 1345, c: fn a, b: 134}
      '
      to_match_snapshot

  it 'compiles idents that are not js prop-names', fn:
    expect
      fink2js "
        foo = rec:
          foo: bar
          π: 3.12,
          ƒ: 'fink'
        "
      to_match_snapshot

  it 'compiles multiline', fn:
    expect
      fink2js 'foo = {
          a: 123

          b: 123
            and 123
            and 1345

          c: fn a, b: 134

          d: foo a + 3
        }
      '
      to_match_snapshot

    expect
      fink2js 'foo = rec:
          a: 123

          b: 123
            and 123
            and 1345

          c: fn a, b: 134

          d: foo a + 3
       '
      to_match_snapshot


describe 'calculated props', fn:
  it 'compiles', fn:
    expect
      fink2js "
        foo = rec:
          (Symbol 'foo'): 123
          'spam': 456
          'spam-\${ham}': 'ni'
        "
      to_match_snapshot




describe 'unpacking record', fn:
  it 'compiles simple', fn:
    expect
      fink2js '{a, b, c} = ni'
      to_match_snapshot


  it 'compiles non js idents', fn:
    expect
      fink2js '{foo, π, ƒ, delete} = spam'
      to_match_snapshot


  it 'compiles spread', fn:
    expect
      fink2js '{e, ...f} = {e: 0, foo: 12, bar: 34}'
      to_match_snapshot


  it 'compiles empty', fn:
    expect
      fink2js '{foo: _ , bar} = {foo: 12, bar: 34}'
      to_match_snapshot


  it 'compiles defaults', fn:
    expect
      fink2js '{x=1, π=2, ni: {y, z}} = {ni: {y: 1, z: 2}}'
      to_match_snapshot


  it 'compiles computed keys', fn:
    expect
      fink2js "{'n i': ni} = foo"
      to_match_snapshot


  it 'compiles member expr as keys', fn:
    expect
      fink2js "foo = {...bar, spam.ham.ni: 'ni', na: 1234, ...nu}"
      to_match_snapshot

    expect
      fink2js "{spam.ham.ni: ni, ...rest} = foo"
      to_match_snapshot

    expect
      fink2js "{spam.ham.ni: {ni: nu, foo.bar: bar}, ...rest} = foo"
      to_match_snapshot


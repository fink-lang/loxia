// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`await compiles 1`] = `
"const task1 = async (foo) => -(await foo);

const task2 = async (foo) => await (foo + 4);

const task3 = async (foo) => {
  const bar = await foo();
  return bar + 123;
};

const a_gen = async function* unfold(ˆinitial_2) {
  let ˆaccu_3 = 0;

  while (true) {
    const curr = ˆaccu_3;

    let _do_result;

    ˆmatch_5: {
      const ˆvalue_4 = shrub;

      if (ˆvalue_4 === spam) {
        _do_result = await ni(curr);
        break ˆmatch_5;
      }

      {
        _do_result = curr + 1;
        break ˆmatch_5;
      }
    }

    const ˆresult_1 = _do_result;
    _do_result = undefined;
    yield ˆresult_1;
    ˆaccu_3 = ˆresult_1;
  }
};

await ni;
Object.assign(module.exports, {
  task1,
  task2,
  task3,
  a_gen
});"
`;

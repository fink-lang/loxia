{is_fn} = import '@fink/std-lib/fn.fnk'

{add_runtime_fn, set_runtime_impl} = import './runtime.fnk'


any = false


add = fn type, op, transformer: fn {transformers, ...ctx}:
  next_transformers = dict:
    ...transformers
    (type or op): transformer

  {transformers: next_transformers, ...ctx}



add_with_runtime = fn type, op, transformer, impl_uri: fn ctx:
  built_in_name = '_${op}_'
  pipe ctx:
    add_runtime_fn built_in_name, ?
    set_runtime_impl built_in_name, impl_uri, ?
    add type, op, transformer



get_transformer = fn {op, type}, {transformers}:
  match transformers:
    {(op): is_fn ?}:
      {(op): transform} = transformers
      transform

    {(type): is_fn ?}:
      {(type): transform} = transformers
      transform

    else:
      false

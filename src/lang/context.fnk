{code_frame_err} = import './errors'

any = false

add = fn type, op, transformer: fn {transformers, ...ctx}:
  next_transformers = {
    ...transformers,
    (type || op): transformer
  }
  {transformers: next_transformers, ...ctx}


obj_has = fn obj, key:
  Object.prototype.hasOwnProperty.call:: obj, key


get_transformer = fn {op, type}, {transformers}:
  match transformers:
    obj_has:: ?, op:
      transformers.(op)

    obj_has:: ?, type:
      transformers.(type)

    else: fn node, ctx:
      err = new Error:: 'Unknown expression'
      throw code_frame_err:: err, node, ctx

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`logical compiles 1`] = `
"{
  ˆmatch_2: {
    const ˆvalue_1 = shrub;

    if (ˆvalue_1 !== undefined && ˆvalue_1 !== null) {
      const {
        \\"foo\\": ˆp_3,
        \\"ni\\": ˆp_4
      } = ˆvalue_1;

      if (ˆp_3 === 4 && ˆp_4 === ni) {
        spam + ni;
        break ˆmatch_2;
      }
    }

    if (ˆvalue_1 === 123) {
      spam;
      break ˆmatch_2;
    }

    if (ˆvalue_1 !== undefined && ˆvalue_1 !== null && typeof ˆvalue_1[Symbol.iterator] === \\"function\\") {
      const [ˆa_5, ˆa_6, ˆa_7] = ˆvalue_1;

      if (ˆa_5 === 1 && ˆa_6 === 2 && ˆa_7 === ni) {
        ni;
        break ˆmatch_2;
      }
    }

    {
      shrub;
      break ˆmatch_2;
    }
  }
}
Object.assign(module.exports, {});"
`;

exports[`logical compiles nested match 1`] = `
"const test = () => {
  const ˆvalue_1 = foo;

  if (ˆvalue_1 === bar) {
    {
      {
        ˆmatch_4: {
          const ˆvalue_3 = spam;

          if (ˆvalue_3 === shrub) {
            ni;
            break ˆmatch_4;
          }
        }
      }
      return bar;
    }
  }
};

Object.assign(module.exports, {
  test
});"
`;

exports[`logical compiles nested obj pattern 1`] = `
"{
  ˆmatch_2: {
    const ˆvalue_1 = shrub;

    if (ˆvalue_1 !== undefined && ˆvalue_1 !== null) {
      const {
        \\"foo\\": ˆp_3,
        \\"ni\\": ˆp_4
      } = ˆvalue_1;

      if (ˆp_3 === 4) {
        if (ˆp_4 !== undefined && ˆp_4 !== null) {
          const {
            \\"na\\": ˆp_5,
            \\"nu\\": ˆp_6
          } = ˆp_4;

          if (ˆp_5 === na && ˆp_6 === nu) {
            spam + ni;
            break ˆmatch_2;
          }
        }
      }
    }

    if (ˆvalue_1 !== undefined && ˆvalue_1 !== null) {
      const {
        \\"foo\\": ˆp_7
      } = ˆvalue_1;
      {
        if (ˆp_7 !== undefined && ˆp_7 !== null) {
          const {
            \\"bar\\": ˆp_8
          } = ˆp_7;

          if (ˆp_8 === \`spam\`) {
            ni;
            break ˆmatch_2;
          }
        }
      }
    }

    if (ˆvalue_1 !== undefined && ˆvalue_1 !== null && typeof ˆvalue_1[Symbol.iterator] === \\"function\\") {
      const [ˆa_9, ˆa_10, ˆa_11] = ˆvalue_1;

      if (ˆa_9 === 1 && ˆa_10 === 2) {
        if (ˆa_11 !== undefined && ˆa_11 !== null && typeof ˆa_11[Symbol.iterator] === \\"function\\") {
          const [ˆa_12] = ˆa_11;

          if (ˆa_12 === ni) {
            ni;
            break ˆmatch_2;
          }
        }
      }
    }

    if (ˆvalue_1 === 123) {
      spam;
      break ˆmatch_2;
    }
  }
}
Object.assign(module.exports, {});"
`;

exports[`logical compiles without else 1`] = `
"{
  ˆmatch_2: {
    const ˆvalue_1 = shrub;

    if (ˆvalue_1 !== undefined && ˆvalue_1 !== null) {
      const {
        \\"foo\\": ˆp_3,
        \\"ni\\": ˆp_4
      } = ˆvalue_1;

      if (ˆp_3 === 4 && ˆp_4 === ni) {
        spam + ni;
        break ˆmatch_2;
      }
    }

    if (ˆvalue_1 === 123) {
      spam;
      break ˆmatch_2;
    }
  }
}
Object.assign(module.exports, {});"
`;

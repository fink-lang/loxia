{highlight_code_loc} = import '@fink/snippet'

# TODO: std-lib/stack-trace
get_stack_trace = fn func:
  err = {}
  Error.captureStackTrace err, func
  err.stack


get_error = fn reason, expr, {code, filename}, stack_func:
  {start: {line, column}} = expr.loc
  type_op = `${expr.type} ${expr.op}`

  error = dict:
    error: `
      ${filename}:${line}:${column}
      ${highlight_code_loc code, expr.loc}

      Unable to transform '${type_op}'.
      `
    expr
    reason
    stack: get_stack_trace stack_func

  error


transform_error = fn {message}, expr, {code, filename}:
  err = get_error message, expr, {code, filename}, transform_error
  {...err, is_transform_err: true}


code_frame_err = fn err, node, code:
  match err:
    {is_transform_err: true}: err
    else: transform_error err, node, code

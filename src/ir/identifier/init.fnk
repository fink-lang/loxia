{add, any, ir_fn_x} = import '../context.fnk'




get_ident = fn id, [scope, ...scopes]=[]:
  match scope:
    {(id): ?}:
      scope.(id)
    ?:
      get_ident id, scopes
    else:
      {i: id, loc: {}}



let = fn id, res_id, {loc}, ctx:
  ir_fn_x '=', [id], res_id, {loc}, ctx



transform_ident = fn {value, loc}, res_id, ctx:
  id = get_ident value, ctx.scopes
  [epxr, , next_ctx] = let id, res_id, {loc}, ctx
  [epxr, next_ctx]



add_ident = fn ctx:
  pipe ctx:
    add 'ident', any, transform_ident





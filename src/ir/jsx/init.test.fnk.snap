// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSX extensions compiles block 1`] = `
"
rec_e fn exports_0:
  id Foobar, fn jsxi_0:
    rec_e fn props_0:
      lst_e fn chldrn_0:
        str '\\\\n  ', fn chld_0:
          lst_a chldrn_0, chld_0, fn chldrn_1:
            id spam, fn callee_0:
              lst_e fn cargs_0:
                af callee_0, cargs_0, fn foo_0:
                  id bar, fn callee_1:
                    lst_e fn cargs_1:
                      id spam, fn arg_0:
                        lst_a cargs_1, arg_0, fn cargs_2:
                          id foo_0, fn arg_1:
                            lst_a cargs_2, arg_1, fn cargs_3:
                              id foo_0, fn arg_2:
                                lst_a cargs_3, arg_2, fn cargs_4:
                                  af callee_1, cargs_4, fn chld_1:
                                    lst_a chldrn_1, chld_1, fn chldrn_2:
                                      str '\\\\n', fn chld_2:
                                        lst_a chldrn_2, chld_2, fn chldrn_3:
                                          jxe jsxi_0, props_0, chldrn_3, fn mex_0:
                                            lst_e fn drctvs_0:
                                              mod exports_0, drctvs_0, fn mod_0:"
`;

exports[`JSX extensions compiles expr group with call for attr value 1`] = `
"
rec_e fn exports_0:
  id Foobar, fn jsxi_0:
    rec_e fn props_0:
      str 'spam', fn prpn_0:
        id ham, fn callee_0:
          lst_e fn cargs_0:
            id ni, fn arg_0:
              lst_a cargs_0, arg_0, fn cargs_1:
                af callee_0, cargs_1, fn prpv_0:
                  rec_s props_0, prpn_0, prpv_0, fn props_1:
                    str 'shrub', fn prpn_1:
                      int '1234', fn prpv_1:
                        rec_s props_1, prpn_1, prpv_1, fn props_2:
                          lst_e fn chldrn_0:
                            jxe jsxi_0, props_2, chldrn_0, fn mex_0:
                              lst_e fn drctvs_0:
                                mod exports_0, drctvs_0, fn mod_0:"
`;

exports[`JSX extensions compiles fink expr as attr values 1`] = `
"
rec_e fn exports_0:
  id Foobar, fn jsxi_0:
    rec_e fn props_0:
      str 'spam', fn prpn_0:
        id ham, fn prpv_0:
          rec_s props_0, prpn_0, prpv_0, fn props_1:
            str 'shrub', fn prpn_1:
              int '1234', fn prpv_1:
                rec_s props_1, prpn_1, prpv_1, fn props_2:
                  str 'ni', fn prpn_2:
                    int '123', fn right_0:
                      sub right_0, fn prpv_2:
                        rec_s props_2, prpn_2, prpv_2, fn props_3:
                          lst_e fn chldrn_0:
                            str ' foo ', fn chld_0:
                              lst_a chldrn_0, chld_0, fn chldrn_1:
                                jxe jsxi_0, props_3, chldrn_1, fn mex_0:
                                  lst_e fn drctvs_0:
                                    mod exports_0, drctvs_0, fn mod_0:"
`;

exports[`JSX extensions compiles fink expr with gt comparison 1`] = `
"
rec_e fn exports_0:
  id Foobar, fn jsxi_0:
    rec_e fn props_0:
      str 'spam', fn prpn_0:
        id foo, fn left_0:
          int '123', fn right_0:
            gt left_0, right_0, fn prpv_0:
              rec_s props_0, prpn_0, prpv_0, fn props_1:
                str 'shrub', fn prpn_1:
                  int '1234', fn prpv_1:
                    rec_s props_1, prpn_1, prpv_1, fn props_2:
                      lst_e fn chldrn_0:
                        str ' ni ', fn chld_0:
                          lst_a chldrn_0, chld_0, fn chldrn_1:
                            jxe jsxi_0, props_2, chldrn_1, fn mex_0:
                              lst_e fn drctvs_0:
                                mod exports_0, drctvs_0, fn mod_0:"
`;

exports[`JSX extensions compiles shothand props 1`] = `
"
rec_e fn exports_0:
  id Foobar, fn jsxi_0:
    rec_e fn props_0:
      str 'spam', fn prpn_0:
        id spam, fn prpv_0:
          rec_s props_0, prpn_0, prpv_0, fn props_1:
            str 'ham-ni', fn prpn_1:
              id ham-ni, fn prpv_1:
                rec_s props_1, prpn_1, prpv_1, fn props_2:
                  lst_e fn chldrn_0:
                    jxe jsxi_0, props_2, chldrn_0, fn mex_0:
                      lst_e fn drctvs_0:
                        mod exports_0, drctvs_0, fn mod_0:"
`;

exports[`JSX extensions compiles spread 1`] = `
"
rec_e fn exports_0:
  id Foobar, fn jsxi_0:
    rec_e fn props_0:
      str 'spam', fn prpn_0:
        id spam, fn prpv_0:
          rec_s props_0, prpn_0, prpv_0, fn props_1:
            id ham, fn sprd_0:
              rec_m props_1, sprd_0, fn props_2:
                str 'shrub', fn prpn_1:
                  id shrub, fn prpv_1:
                    rec_s props_2, prpn_1, prpv_1, fn props_3:
                      lst_e fn chldrn_0:
                        jxe jsxi_0, props_3, chldrn_0, fn mex_0:
                          lst_e fn drctvs_0:
                            mod exports_0, drctvs_0, fn mod_0:"
`;

exports[`JSX extensions compiles template str attr 1`] = `
"
rec_e fn exports_0:
  id Foobar, fn jsxi_0:
    rec_e fn props_0:
      str 'spam', fn prpn_0:
        str 'ni: ', fn str_0:
          int '1', fn left_0:
            int '2', fn right_0:
              add left_0, right_0, fn sx_0:
                str '', fn str_1:
                  strt str_0, sx_0, str_1, fn prpv_0:
                    rec_s props_0, prpn_0, prpv_0, fn props_1:
                      lst_e fn chldrn_0:
                        jxe jsxi_0, props_1, chldrn_0, fn mex_0:
                          lst_e fn drctvs_0:
                            mod exports_0, drctvs_0, fn mod_0:"
`;

exports[`jsx compiles empty elem 1`] = `
"
rec_e fn exports_0:
  id b, fn jsxi_0:
    rec_e fn props_0:
      lst_e fn chldrn_0:
        jxe jsxi_0, props_0, chldrn_0, fn elem_0:
          str 'elem', fn key_0:
            rec_s exports_0, key_0, elem_0, fn exports_1:
              lst_e fn drctvs_0:
                mod exports_1, drctvs_0, fn mod_0:"
`;

exports[`jsx compiles fragment 1`] = `
"
rec_e fn exports_0:
  lst_e fn chldrn_0:
    jxf chldrn_0, fn elem_0:
      str 'elem', fn key_0:
        rec_s exports_0, key_0, elem_0, fn exports_1:
          lst_e fn drctvs_0:
            mod exports_1, drctvs_0, fn mod_0:"
`;

exports[`jsx compiles fragment with children 1`] = `
"
rec_e fn exports_0:
  lst_e fn chldrn_0:
    str '\\\\n  foo\\\\n  ', fn chld_0:
      lst_a chldrn_0, chld_0, fn chldrn_1:
        id p, fn jsxi_0:
          rec_e fn props_0:
            lst_e fn chldrn_2:
              str 'bar', fn chld_2:
                lst_a chldrn_2, chld_2, fn chldrn_3:
                  jxe jsxi_0, props_0, chldrn_3, fn chld_1:
                    lst_a chldrn_1, chld_1, fn chldrn_4:
                      str '\\\\n', fn chld_3:
                        lst_a chldrn_4, chld_3, fn chldrn_5:
                          jxf chldrn_5, fn elem_0:
                            str 'elem', fn key_0:
                              rec_s exports_0, key_0, elem_0, fn exports_1:
                                lst_e fn drctvs_0:
                                  mod exports_1, drctvs_0, fn mod_0:"
`;

exports[`jsx compiles hypenate props 1`] = `
"
rec_e fn exports_0:
  id a, fn jsxi_0:
    rec_e fn props_0:
      str 'foo-bar', fn prpn_0:
        str '1234', fn str_0:
          strt str_0, fn prpv_0:
            rec_s props_0, prpn_0, prpv_0, fn props_1:
              lst_e fn chldrn_0:
                jxe jsxi_0, props_1, chldrn_0, fn elem_0:
                  str 'elem', fn key_0:
                    rec_s exports_0, key_0, elem_0, fn exports_1:
                      lst_e fn drctvs_0:
                        mod exports_1, drctvs_0, fn mod_0:"
`;

exports[`jsx compiles shorthand 1`] = `
"
rec_e fn exports_0:
  id a, fn jsxi_0:
    rec_e fn props_0:
      lst_e fn chldrn_0:
        jxe jsxi_0, props_0, chldrn_0, fn elem_0:
          str 'elem', fn key_0:
            rec_s exports_0, key_0, elem_0, fn exports_1:
              lst_e fn drctvs_0:
                mod exports_1, drctvs_0, fn mod_0:"
`;

exports[`jsx compiles with children and expr 1`] = `
"
rec_e fn exports_0:
  id a, fn jsxi_0:
    rec_e fn props_0:
      lst_e fn chldrn_0:
        str '\\\\n  foo ', fn chld_0:
          lst_a chldrn_0, chld_0, fn chldrn_1:
            id ni, fn chld_1:
              lst_a chldrn_1, chld_1, fn chldrn_2:
                str '\\\\n  ', fn chld_2:
                  lst_a chldrn_2, chld_2, fn chldrn_3:
                    id b, fn jsxi_1:
                      rec_e fn props_1:
                        lst_e fn chldrn_4:
                          jxe jsxi_1, props_1, chldrn_4, fn chld_3:
                            lst_a chldrn_3, chld_3, fn chldrn_5:
                              str ' ham\\\\n  spam\\\\n  ', fn chld_4:
                                lst_a chldrn_5, chld_4, fn chldrn_6:
                                  id c, fn jsxi_2:
                                    rec_e fn props_2:
                                      lst_e fn chldrn_7:
                                        jxe jsxi_2, props_2, chldrn_7, fn chld_5:
                                          lst_a chldrn_6, chld_5, fn chldrn_8:
                                            str '\\\\n  ni\\\\n', fn chld_6:
                                              lst_a chldrn_8, chld_6, fn chldrn_9:
                                                jxe jsxi_0, props_0, chldrn_9, fn elem_0:
                                                  str 'elem', fn key_0:
                                                    rec_s exports_0, key_0, elem_0, fn exports_1:
                                                      lst_e fn drctvs_0:
                                                        mod exports_1, drctvs_0, fn mod_0:"
`;

exports[`jsx compiles with expr params 1`] = `
"
rec_e fn exports_0:
  id a, fn jsxi_0:
    rec_e fn props_0:
      str 'foo', fn prpn_0:
        id foo, fn prpv_0:
          rec_s props_0, prpn_0, prpv_0, fn props_1:
            str 'bar', fn prpn_1:
              int '1234', fn prpv_1:
                rec_s props_1, prpn_1, prpv_1, fn props_2:
                  lst_e fn chldrn_0:
                    jxe jsxi_0, props_2, chldrn_0, fn elem_0:
                      str 'elem', fn key_0:
                        rec_s exports_0, key_0, elem_0, fn exports_1:
                          lst_e fn drctvs_0:
                            mod exports_1, drctvs_0, fn mod_0:"
`;

exports[`jsx compiles with expr params 2`] = `
"
rec_e fn exports_0:
  id a, fn jsxi_0:
    rec_e fn props_0:
      str 'foo', fn prpn_0:
        id foo, fn prpv_0:
          rec_s props_0, prpn_0, prpv_0, fn props_1:
            str 'bar', fn prpn_1:
              str 'ni', fn str_0:
                strt str_0, fn prpv_1:
                  rec_s props_1, prpn_1, prpv_1, fn props_2:
                    lst_e fn chldrn_0:
                      jxe jsxi_0, props_2, chldrn_0, fn elem_0:
                        str 'elem', fn key_0:
                          rec_s exports_0, key_0, elem_0, fn exports_1:
                            lst_e fn drctvs_0:
                              mod exports_1, drctvs_0, fn mod_0:"
`;

exports[`jsx compiles with str params 1`] = `
"
rec_e fn exports_0:
  id a, fn jsxi_0:
    rec_e fn props_0:
      str 'foo', fn prpn_0:
        id foo, fn prpv_0:
          rec_s props_0, prpn_0, prpv_0, fn props_1:
            str 'bar', fn prpn_1:
              str 'ni', fn str_0:
                strt str_0, fn prpv_1:
                  rec_s props_1, prpn_1, prpv_1, fn props_2:
                    lst_e fn chldrn_0:
                      jxe jsxi_0, props_2, chldrn_0, fn elem_0:
                        str 'elem', fn key_0:
                          rec_s exports_0, key_0, elem_0, fn exports_1:
                            lst_e fn drctvs_0:
                              mod exports_1, drctvs_0, fn mod_0:"
`;

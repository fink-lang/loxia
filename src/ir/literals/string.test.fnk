{describe, it, expect, to_match_snapshot} = import '@fink/jest/test.fnk'
{fink2lir, fink2types} = import '../../testing/generate.fnk'


describe 'string', fn:

  it 'compiles simple', fn:
    expect
      fink2lir "
        str = 'ab'
      "
      to_match_snapshot


  it 'compiles multiline', fn:
    expect
      fink2lir "
        str = '
          line 1
          line 2 with leading space
          line 3'
      "
      to_match_snapshot


  it 'compiles escape chars', fn:
    expect
      fink2lir "
        str1 = 'foo`bar\\nspam\\`ni'
        str2 = \"foo\\\\\"
      "
      to_match_snapshot


  it 'compiles tagged template string', fn:
    expect
      fink2lir "
        str = foo'bar \${ni spam, shrub} na'
      "
      to_match_snapshot


  it 'compiles multiline with expressions', fn:
    expect
      fink2lir "
        str = '
          bar
          spam \${shrub + ni}\${foo}
          ni
        '
      "
      to_match_snapshot



describe 'types', fn:
  it 'infers str', fn:
    expect
      fink2types "
        a = 'foo'
        b = 'bar $\{spam} ham'
      "
      to_match_snapshot

  it 'infers tagged str', fn:
    expect
      fink2types "
        foo = fn strs, ni:
          [strs, ni]
        bar = foo'ni $\{ni}'
      "
      to_match_snapshot


{add} = import '../context.fnk'

{let} = import '../identifier/init.fnk'



transform_partial = fn expr, result, ctx:
  {partial_ident=false} = ctx
  [prt, , end_ctx] = let partial_ident, result, expr, {...ctx, has_partial: true}
  [prt, end_ctx]



add_partial = fn ctx:
  pipe ctx:
    add 'partial', '?', transform_partial

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`optimize foo 1`] = `
"
rec_e fn exports_0:
  int '1', fn a_0:
    str 'a', fn key_0:
      rec_s exports_0, key_0, a_0, fn exports_1:
        int '2', fn b_0:
          str 'b', fn key_1:
            rec_s exports_1, key_1, b_0, fn exports_2:
              lst_e fn lst_1:
                lst_a lst_1, a_0, fn lst_0:
                  lst_a lst_0, b_0, fn c_0:
                    str 'c', fn key_2:
                      rec_s exports_2, key_2, c_0, fn exports_3:
                        add a_0, b_0, fn f_0:
                          str 'f', fn key_3:
                            rec_s exports_3, key_3, f_0, fn exports_4:
                              lst_e fn drctvs_0:
                                mod exports_4, drctvs_0, fn mod_0:"
`;

exports[`optimize optimizes ac ...>> res: cc ..., res 1`] = `
"
rec_e fn exports_0:
  id (fn args_0, ret_0: #fnr
    lst_h args_0, fn x_0:
      lst_t args_0, fn tail_0:
        lst_h tail_0, fn y_0:
          id (fn: #cn
            lst_e fn cargs_0:
              lst_a cargs_0, y_0, fn cargs_1:
                rem x_0, y_0, fn arg_1:
                  lst_a cargs_1, arg_1, fn cargs_2:
                    cf gcd_0, cargs_2
          ), fn else_0:
            int '0', fn val_0:
              eq y_0, val_0, fn cond_0:
                id (fn: #cn
                  cc ret_0, x_0
                ), fn match_res_0:
                  cif cond_0, match_res_0, else_0
  ), fn gcd_0:
    str 'gcd', fn key_0:
      rec_s exports_0, key_0, gcd_0, fn exports_1:
        lst_e fn drctvs_0:
          mod exports_1, drctvs_0, fn mod_0:"
`;

exports[`optimize optimizes conts 1`] = `
"
rec_e fn exports_0:
  int '123', fn ni_0:
    str 'ni', fn key_0:
      rec_s exports_0, key_0, ni_0, fn exports_1:
        id (fn args_0, ret_0: #fn
          lst_h args_0, fn foo_0:
            lst_t args_0, fn tail_0:
              lst_h tail_0, fn bar_0:
                id (fn ret_1: #cn
                  id (fn: #cn
                    lst_e fn lst_1:
                      int '2', fn item_1:
                        lst_a lst_1, item_1, fn lst_0:
                          int '2', fn right_1:
                            mul ni_0, right_1, fn item_0:
                              lst_a lst_0, item_0, fn result_1:
                                cc ret_1, result_1
                  ), fn else_0:
                    eq foo_0, bar_0, fn cond_0:
                      id (fn: #cn
                        lst_e fn lst_3:
                          int '1', fn item_3:
                            lst_a lst_3, item_3, fn lst_2:
                              lst_a lst_2, ni_0, fn result_2:
                                cc ret_1, result_2
                      ), fn match_res_0:
                        cif cond_0, match_res_0, else_0
                ), fn match_0:
                  ac match_0, fn right_0:
                    lst_h right_0, fn spam_1:
                      lst_t right_0, fn tail_2:
                        lst_h tail_2, fn ham_0:
                          add spam_1, ni_0, fn left_1:
                            add left_1, ham_0, fn result_3:
                              cc ret_0, result_3
        ), fn spam_0:
          str 'spam', fn key_1:
            rec_s exports_1, key_1, spam_0, fn exports_2:
              lst_e fn cargs_0:
                lst_a cargs_0, foo, fn cargs_1:
                  lst_a cargs_1, bar, fn cargs_2:
                    af spam_0, cargs_2, fn mex_0:
                      lst_e fn drctvs_0:
                        mod exports_2, drctvs_0, fn mod_0:"
`;

exports[`optimize optimizes functions 1`] = `
"
rec_e fn exports_0:
  int '123', fn ni_0:
    str 'ni', fn key_0:
      rec_s exports_0, key_0, ni_0, fn exports_1:
        id (fn args_0, ret_0: #fn
          lst_h args_0, fn foo_0:
            lst_t args_0, fn tail_0:
              lst_h tail_0, fn bar_0:
                add bar_0, foo_0, fn left_0:
                  add left_0, ni_0, fn result_1:
                    cc ret_0, result_1
        ), fn spam_0:
          str 'spam', fn key_1:
            rec_s exports_1, key_1, spam_0, fn exports_2:
              lst_e fn cargs_0:
                lst_a cargs_0, foo, fn cargs_1:
                  lst_a cargs_1, bar, fn cargs_2:
                    af spam_0, cargs_2, fn mex_0:
                      lst_e fn drctvs_0:
                        mod exports_2, drctvs_0, fn mod_0:"
`;

exports[`optimize optimizes using short names 1`] = `
"
rec_e fn a:
  int '3', fn b:
    str 'ham', fn c:
      rec_s a, c, b, fn d:
        add spam, b, fn e:
          str 'foobar', fn f:
            rec_s d, f, e, fn g:
              id (fn h, i: #fn
                lst_h h, fn j:
                  lst_t h, fn k:
                    lst_h k, fn l:
                      add j, l, fn m:
                        cc i, m
              ), fn n:
                str 'shrurb', fn o:
                  rec_s g, o, n, fn p:
                    id (fn q, r: #fn
                      lst_h q, fn s:
                        lst_t q, fn t:
                          lst_h t, fn u:
                            add s, u, fn v:
                              add v, b, fn w:
                                cc r, w
                    ), fn x:
                      str 'nanu', fn y:
                        rec_s p, y, x, fn z:
                          id (fn A, B: #fn
                            lst_h A, fn C:
                              lst_t A, fn D:
                                lst_h D, fn E:
                                  lst_t D, fn F:
                                    lst_h F, fn G:
                                      lst_e fn H:
                                        lst_a H, C, fn I:
                                          lst_a I, E, fn J:
                                            lst_a J, G, fn K:
                                              cc B, K
                          ), fn L:
                            str 'ni', fn M:
                              rec_s z, M, L, fn N:
                                id (fn O, P: #fn
                                  lst_h O, fn Q:
                                    lst_t O, fn R:
                                      lst_h R, fn S:
                                        lst_t R, fn T:
                                          lst_h T, fn U:
                                            lst_e fn V:
                                              lst_a V, Q, fn W:
                                                lst_a W, S, fn X:
                                                  lst_a X, U, fn Y:
                                                    cc P, Y
                                ), fn Z:
                                  str 'na', fn aa:
                                    rec_s N, aa, Z, fn ab:
                                      lst_e fn ac:
                                        mod ab, ac, fn ad:"
`;

exports[`optimize optimizes values 1`] = `
"
rec_e fn exports_0:
  lst_e fn lst_1:
    int '1', fn item_1:
      lst_a lst_1, item_1, fn lst_0:
        int '2', fn item_0:
          lst_a lst_0, item_0, fn y_0:
            str 'y', fn key_0:
              rec_s exports_0, key_0, y_0, fn exports_1:
                int '3', fn x_0:
                  str 'x', fn key_1:
                    rec_s exports_1, key_1, x_0, fn exports_2:
                      int '4', fn item_6:
                        int '5', fn item_4:
                          int '1', fn item_9:
                            int '2', fn item_8:
                              int '3', fn item_7:
                                lst_a sp_0_2, item_9, fn sp_0_1:
                                  lst_a sp_0_1, item_8, fn sp_0:
                                    lst_e fn cargs_0:
                                      lst_a cargs_0, item_6, fn cargs_1:
                                        lst_a cargs_1, x_0, fn cargs_2:
                                          lst_a cargs_2, item_4, fn cargs_3:
                                            lst_a cargs_3, y_0, fn cargs_4:
                                              lst_a cargs_4, item_7, fn cargs_5:
                                                lst_a cargs_5, sp_0, fn cargs_6:
                                                  lst_a cargs_6, item_9, fn cargs_7:
                                                    lst_a cargs_7, lala, fn cargs_8:
                                                      af log, cargs_8, fn mex_5:
                                                        lst_e fn drctvs_0:
                                                          mod exports_2, drctvs_0, fn mod_0:"
`;

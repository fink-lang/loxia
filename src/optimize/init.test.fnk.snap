// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`optimize foo 1`] = `
"
rec_e fn exports_0:
  int '1', fn a_0:
    str 'a', fn key_0:
      rec_s exports_0, key_0, a_0, fn exports_1:
        int '2', fn b_0:
          str 'b', fn key_1:
            rec_s exports_1, key_1, b_0, fn exports_2:
              tpl a_0, b_0, fn c_0:
                str 'c', fn key_2:
                  rec_s exports_2, key_2, c_0, fn exports_3:
                    add a_0, b_0, fn f_0:
                      str 'f', fn key_3:
                        rec_s exports_3, key_3, f_0, fn exports_4:
                          tpl, fn drctvs_0:
                            mod exports_4, drctvs_0, fn mod_0:"
`;

exports[`optimize optimizes ac ...>> res: cc ..., res 1`] = `
"
rec_e fn exports_0:
  z (fn args_0, ret_1, gcd_0_0: #fn
    tpl_i args_0, 0, fn x_0:
      tpl_i args_0, 1, fn y_0:
        id (fn: #cn
          rem x_0, y_0, fn arg_1:
            tpl y_0, arg_1, fn cargs_2:
              cf gcd_0_0, cargs_2
        ), fn else_0:
          int '0', fn val_0:
            eq y_0, val_0, fn cond_0:
              id (fn: #cn
                cc ret_1, x_0
              ), fn match_res_0:
                cif cond_0, match_res_0, else_0
  ), fn gcd_0:
    str 'gcd', fn key_0:
      rec_s exports_0, key_0, gcd_0, fn exports_1:
        tpl, fn drctvs_0:
          mod exports_1, drctvs_0, fn mod_0:"
`;

exports[`optimize optimizes conts 1`] = `
"
rec_e fn exports_0:
  int '123', fn ni_0:
    str 'ni', fn key_0:
      rec_s exports_0, key_0, ni_0, fn exports_1:
        id (fn args_0, ret_1: #fn
          tpl_i args_0, 0, fn foo_0:
            tpl_i args_0, 1, fn bar_0:
              id (fn ret_0: #cn
                id (fn: #cn
                  int '2', fn item_1:
                    int '2', fn right_0:
                      mul ni_0, right_0, fn item_0:
                        tpl item_1, item_0, fn result_1:
                          cc ret_0, result_1
                ), fn else_0:
                  eq foo_0, bar_0, fn cond_0:
                    id (fn: #cn
                      int '1', fn item_3:
                        tpl item_3, ni_0, fn result_2:
                          cc ret_0, result_2
                    ), fn match_res_0:
                      cif cond_0, match_res_0, else_0
              ), fn match_0:
                ac match_0, fn dlst_0:
                  tpl_i dlst_0, 0, fn spam_1:
                    tpl_i dlst_0, 1, fn ham_0:
                      add spam_1, ni_0, fn left_1:
                        add left_1, ham_0, fn result_3:
                          cc ret_1, result_3
        ), fn spam_0:
          str 'spam', fn key_1:
            rec_s exports_1, key_1, spam_0, fn exports_2:
              tpl foo, bar, fn cargs_2:
                af spam_0, cargs_2, fn mex_0:
                  tpl, fn drctvs_0:
                    mod exports_2, drctvs_0, fn mod_0:"
`;

exports[`optimize optimizes functions 1`] = `
"
rec_e fn exports_0:
  int '123', fn ni_0:
    str 'ni', fn key_0:
      rec_s exports_0, key_0, ni_0, fn exports_1:
        id (fn args_0, ret_0: #fn
          tpl_i args_0, 0, fn foo_0:
            tpl_i args_0, 1, fn bar_0:
              add bar_0, foo_0, fn left_0:
                add left_0, ni_0, fn result_1:
                  cc ret_0, result_1
        ), fn spam_0:
          str 'spam', fn key_1:
            rec_s exports_1, key_1, spam_0, fn exports_2:
              tpl foo, bar, fn cargs_2:
                af spam_0, cargs_2, fn mex_0:
                  tpl, fn drctvs_0:
                    mod exports_2, drctvs_0, fn mod_0:"
`;

exports[`optimize optimizes using short names 1`] = `
"
rec_e fn a:
  int '3', fn b:
    str 'ham', fn c:
      rec_s a, c, b, fn d:
        add spam, b, fn e:
          str 'foobar', fn f:
            rec_s d, f, e, fn g:
              id (fn h, i: #fn
                tpl_i h, 0, fn j:
                  tpl_i h, 1, fn k:
                    add j, k, fn l:
                      cc i, l
              ), fn m:
                str 'shrurb', fn n:
                  rec_s g, n, m, fn o:
                    id (fn p, q: #fn
                      tpl_i p, 0, fn r:
                        tpl_i p, 1, fn s:
                          add r, s, fn t:
                            add t, b, fn u:
                              cc q, u
                    ), fn v:
                      str 'nanu', fn w:
                        rec_s o, w, v, fn x:
                          id (fn y, z: #fn
                            tpl_i y, 0, fn A:
                              tpl_i y, 1, fn B:
                                tpl_i y, 2, fn C:
                                  tpl_i y, 3, fn D:
                                    tpl_i y, 4, fn E:
                                      tpl A, B, C, D, E, fn F:
                                        cc z, F
                          ), fn G:
                            str 'ni', fn H:
                              rec_s x, H, G, fn I:
                                id (fn J, K: #fn
                                  tpl_i J, 0, fn L:
                                    tpl_i J, 1, fn M:
                                      tpl_i J, 2, fn N:
                                        tpl_i J, 3, fn O:
                                          tpl_i J, 4, fn P:
                                            tpl L, M, N, O, P, fn Q:
                                              cc K, Q
                                ), fn R:
                                  str 'na', fn S:
                                    rec_s I, S, R, fn T:
                                      id (fn U, V: #fn
                                        tpl_i U, 0, fn W:
                                          tpl_i U, 1, fn X:
                                            tpl_i U, 2, fn Y:
                                              tpl_i U, 3, fn Z:
                                                tpl_i U, 4, fn aa:
                                                  tpl W, X, Y, Z, aa, fn ab:
                                                    cc V, ab
                                      ), fn ac:
                                        str 'nu', fn ad:
                                          rec_s T, ad, ac, fn ae:
                                            tpl, fn af:
                                              mod ae, af, fn ag:"
`;

exports[`optimize optimizes values 1`] = `
"
rec_e fn exports_0:
  int '1', fn item_1:
    int '2', fn item_0:
      tpl item_1, item_0, fn y_0:
        str 'y', fn key_0:
          rec_s exports_0, key_0, y_0, fn exports_1:
            int '3', fn x_0:
              str 'x', fn key_1:
                rec_s exports_1, key_1, x_0, fn exports_2:
                  int '4', fn item_6:
                    int '5', fn item_4:
                      int '1', fn item_9:
                        int '2', fn item_8:
                          int '3', fn item_7:
                            tpl item_9, item_8, fn sp_0:
                              tpl item_6, x_0, item_4, y_0, item_7, sp_0, item_9, lala, fn cargs_8:
                                af log, cargs_8, fn mex_5:
                                  tpl, fn drctvs_0:
                                    mod exports_2, drctvs_0, fn mod_0:"
`;

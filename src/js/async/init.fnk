types = import '@babel/types'
{awaitExpression, isArrowFunctionExpression} = types
{set_props} = import '@fink/js-interop/reflect.fnk'

{add, get_js, set_js} = import '../context.fnk'


[no_result] = []


transform_async = fn path:
  # TODO: should avoid mutating nodes
  match path:
    isArrowFunctionExpression ?:
      set_props path.node, {async: true}

    {parentPath: {}}:
      transform_async path.parentPath

  no_result



transform_wt = fn expr, ctx:
  [, [right_id], [result_id]] = expr

  js = awaitExpression
    get_js right_id, ctx

  set_js result_id, js, ctx



add_async = fn ctx:
  pipe ctx:
    add 'wt', transform_wt


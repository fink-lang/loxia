// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`await compiles 1`] = `
"const task1_0 = async foo_0 => {
  const right_0 = await foo_0;
  return -right_0;
};

const task2_0 = async foo_1 => {
  const result_1 = await (foo_1 + 4);
  return result_1;
};

const task3_0 = async foo_2 => {
  const futr_2 = foo_2();
  const spam_0 = await futr_2;
  return bar + 123 + spam_0;
};

const a_gen_0 = unfold(async hdm_0 => {
  const curr_0 = undefined === hdm_0 ? 0 : hdm_0;

  /* istanbul ignore else */
  if (shrub === spam) {
    const futr_3 = ni(curr_0);
    const result_6 = await futr_3;
    return result_6;
  }

  return curr_0 + 1;
});
export const task1 = task1_0,
      task2 = task2_0,
      task3 = task3_0,
      a_gen = a_gen_0;"
`;

exports[`await does not inline into func body 1`] = `
"const task1_0 = async foo_0 => {
  const bar_0 = await foo_0;
  const result_1 = shrub(ni_0 => {
    return ni_0 + bar_0;
  });
  return result_1;
};

export const task1 = task1_0;"
`;

types = import '@babel/types'
{logicalExpression} = types

{add, get_js, set_js2} = import '../context.fnk'

{transform_unary} = import '../transform.fnk'




transform_binary = fn jsop: fn expr, ctx:
  [, [left_id, right_id]] = expr
  left = get_js left_id, ctx
  right = get_js right_id, ctx
  js = logicalExpression jsop, left, right
  set_js2 expr, js, ctx





add_logical = fn ctx:
  pipe ctx:
    add 'and', transform_binary '&&'
    add 'or', transform_binary '||'
    add 'not', transform_unary


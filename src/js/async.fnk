babel_types = import '@babel/types'
{
  isArrowFunctionExpression, isForOfStatement, isObjectMethod
} = babel_types
{set_props} = import '@fink/js-interop/reflect.fnk'


[no_result] = []


transform_async = fn path:
  # TODO: should avoid mutating nodes
  match path:
    isArrowFunctionExpression ?:
      set_props path.node, {async: true}

    # generators for iterables
    isObjectMethod ?:
      set_props path.node, {async: true}
      match path.node:
        {key: {property: {name: 'iterator'}}}:
          set_props path.node.key.property, {name: 'asyncIterator'}

    isForOfStatement ?:
      set_props path.node, {await: true}
      transform_async path.parentPath

    {parentPath: {}}:
      transform_async path.parentPath

  no_result
